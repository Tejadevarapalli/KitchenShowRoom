global string $unityMenuName = "UnityFbxForMaya";
global string $unityMenuDivider = "UnityFbxForMayaDivider";
global string $unityMenuLabel = "Unity";
global string $unityMenuInsertAfter = "exportActiveFileOptions";

global string $unityImportIconPath = "import.png";
global string $unityExportIconPath = "export.png";
global string $unityIconPath = "unity.png";

global string $unityFamilyLabel = "The UnityFbxForMaya plugin (v.1.2.0b1) allows you to reliably exchange and review your work between Maya and Unity.";
global string $unityImportLabel = "Import an FBX file from a Unity project and auto-configure for exporting";
global string $unityExportLabel = "Export Model to Unity";

global string $unityCommandsFile = "unityCommands.mel";
global string $unityImportMenuName = "Import";
global string $unityExportMenuName = "Export";
global string $unityImportCommand = "unityImport";
global string $unityExportCommand = "unityExport";

global proc string unityWhatsNewVersion(){
    return `about -q -version`;

}

global proc unitySetupUI(){
    global string $unityCommandsFile;
    $isHeadless = `optionVar -q "UnityFbxForMaya_Headless"`;
    if($isHeadless){
        // headless install, don't add UI
        return;
    }    
    
    eval ("source " + $unityCommandsFile);
    loadUnityDependencies();

    evalDeferred -lowestPriority "unityInstallUI";
}

global proc unityInstallUI(){
    global string $unityMenuName;
    global string $unityMenuDivider;
    global string $unityMenuLabel;
    global string $unityMenuInsertAfter;

    global string $unityImportIconPath;
    global string $unityExportIconPath;
    global string $unityIconPath;

    global string $unityPluginVersion;
    global string $unityFamilyLabel;
    global string $unityImportLabel;
    global string $unityExportLabel;
    global string $unityCommandsFile;
    global string $unityImportMenuName;
    global string $unityExportMenuName;
    global string $unityImportCommand;
    global string $unityExportCommand;
    
    global string $gMainFileMenu;
    
    buildFileMenu;
    $parentMenu = $gMainFileMenu;
    $pluginVersion = unityWhatsNewVersion();
    eval ("source " + $unityCommandsFile);
    menuItem -parent $parentMenu -insertAfter $unityMenuInsertAfter -divider true -longDivider false -version $pluginVersion $unityMenuDivider;
    menuItem -parent $parentMenu -insertAfter $unityMenuDivider -subMenu true -label $unityMenuLabel -tearOff true -version $pluginVersion -image $unityIconPath -annotation $unityFamilyLabel $unityMenuName;
    menuItem -parent $unityMenuName -label $unityImportMenuName -version $pluginVersion -image $unityImportIconPath -annotation $unityImportLabel -command $unityImportCommand;
    menuItem -parent $unityMenuName -label $unityExportMenuName -version $pluginVersion -image $unityExportIconPath -annotation $unityExportLabel -command $unityExportCommand;

    unityRemoveNativeMenuOnLoad(); 

}